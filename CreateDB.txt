-- Query 1
CREATE DATABASE LIMUPAStore

-- Query 2
USE LIMUPAStore

CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR(100) PRIMARY KEY,
	MEMBER_NAME NVARCHAR(100),
	BONUS FLOAT
)
CREATE TABLE ROLES(
	ROLE_ID VARCHAR(100) PRIMARY KEY,
	ROLE_NAME NVARCHAR(100),
)
-- Trùng key User, chuyển thành Account
CREATE TABLE ACCOUNT(
	ACCOUNT_ID VARCHAR(100) PRIMARY KEY,
	EMAIL VARCHAR(100),
	ACCOUNT_PASSWORD VARCHAR(100),
	ACCOUNT_NAME NVARCHAR(100),
	PHONE VARCHAR(20),
	ACCOUNT_ADDRESS TEXT,
	ROLE_ID VARCHAR(100),
	MEMBER_ID VARCHAR(100),

	CONSTRAINT PK_ACCOUNT_ROLES 
	FOREIGN KEY(ROLE_ID) 
	REFERENCES ROLES(ROLE_ID),

	CONSTRAINT PK_ACCOUNT_MEMBER 
	FOREIGN KEY(MEMBER_ID) 
	REFERENCES MEMBER(MEMBER_ID),
)

CREATE TABLE PRODUCER(
	PRODUCER_ID VARCHAR(100) PRIMARY KEY,
	PRODUCER_NAME NVARCHAR(100)
)

CREATE TABLE PRODUCTTYPE(
	PRODUCTTYPE_ID VARCHAR(100) PRIMARY KEY,
	TYPE_NAME NVARCHAR(100),
)

CREATE TABLE PRODUCT(
	PRODUCT_ID VARCHAR(100) PRIMARY KEY,
	PRODUCT_NAME NVARCHAR(100),
	PRICE FLOAT,
	COLOR NVARCHAR(50),
	PRODUCT_IMAGE VARCHAR(MAX),
	PRODUCT_DESCRIPTION NVARCHAR(MAX),
	PRODUCT_COUNT INT,
	CREATE_DATE VARCHAR(12),
	PRODUCER_ID VARCHAR(100),
	PRODUCTTYPE_ID VARCHAR(100)

	CONSTRAINT PK_PRODUCT_PRODUCER
	FOREIGN KEY(PRODUCER_ID) 
	REFERENCES PRODUCER(PRODUCER_ID),
	
	CONSTRAINT PK_PRODUCT_PRODUCTTYPE
	FOREIGN KEY(PRODUCTTYPE_ID) 
	REFERENCES PRODUCTTYPE(PRODUCTTYPE_ID),
)
CREATE TABLE COMMENT(
	COMMENT_ID VARCHAR(100) PRIMARY KEY,
	CONTENT TEXT,
	PRODUCT_ID VARCHAR(100),
	ACCOUNT_ID VARCHAR(100),

	CONSTRAINT PK_COMMENT_PRODUCT
	FOREIGN KEY(PRODUCT_ID) 
	REFERENCES PRODUCT(PRODUCT_ID),

	CONSTRAINT PK_COMMENT_ACCOUNT
	FOREIGN KEY(ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),
)
CREATE TABLE RATING(
	RATING_ID VARCHAR(100) PRIMARY KEY,
	STAR TINYINT,
	CONTENT NVARCHAR(MAX),
	ACCOUNT_ID VARCHAR(100),
	PRODUCT_ID VARCHAR(100),

	CONSTRAINT PK_RATING_ACCOUNT
	FOREIGN KEY(ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),

	CONSTRAINT PK_RATING_PRODUCT
	FOREIGN KEY(PRODUCT_ID) 
	REFERENCES PRODUCT(PRODUCT_ID),
)

CREATE TABLE CART(
	CART_ID VARCHAR(100) PRIMARY KEY,
	ACCOUNT_ID VARCHAR(100),
	CREATE_DATE VARCHAR(12),
	TOTAL FLOAT,

	CONSTRAINT PK_CART_ACCOUNT
	FOREIGN KEY(ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),
)
CREATE TABLE CARTDETAIL(
	CARTDETAIL_ID VARCHAR(100) PRIMARY KEY,
	CART_ID VARCHAR(100),
	PRODUCT_ID VARCHAR(100),
	PRICE FLOAT,
	QUANTITY INT,

	CONSTRAINT PK_CARTDETAIL_CART
	FOREIGN KEY(CART_ID) 
	REFERENCES CART(CART_ID),

	CONSTRAINT PK_CARTDETAIL_PRODUCT
	FOREIGN KEY(PRODUCT_ID) 
	REFERENCES PRODUCT(PRODUCT_ID),
)

CREATE TABLE PAYMENT(
	PAYMENT_ID VARCHAR(100) PRIMARY KEY,
	PAYMENT_METHOD NVARCHAR(MAX),
)
CREATE TABLE ORDERSTATUS(
	STATUS_ID VARCHAR(100) PRIMARY KEY,
	STATUS_NAME NVARCHAR(100)
)

CREATE TABLE ORDERS(
	ORDER_ID VARCHAR(100) PRIMARY KEY,
	ACCOUNT_ID VARCHAR(100),
	SHIP_ADDRESS TEXT,
	PHONE VARCHAR(20),
	CREATE_DATE VARCHAR(12),
	PAYMENT_ID VARCHAR(100),
	STATUS_ID VARCHAR(100),
	DISCOUNT FLOAT,
	TOTAL FLOAT,
	CART_ID VARCHAR(100),

	CONSTRAINT PK_ORDERS_ACCOUNT
	FOREIGN KEY(ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),

	CONSTRAINT PK_ORDERS_PAYMENT
	FOREIGN KEY(PAYMENT_ID) 
	REFERENCES PAYMENT(PAYMENT_ID),

	CONSTRAINT PK_ORDERS_STATUS
	FOREIGN KEY(STATUS_ID) 
	REFERENCES ORDERSTATUS(STATUS_ID),

	CONSTRAINT PK_ORDERS_CART
	FOREIGN KEY(CART_ID) 
	REFERENCES CART(CART_ID),
)
CREATE TABLE FAVORITE(
	FAVORITE_ID VARCHAR(100) PRIMARY KEY,
	ACCOUNT_ID VARCHAR(100),
	PRODUCT_ID VARCHAR(100),

	CONSTRAINT PK_FAVORITE_ACCOUNT
	FOREIGN KEY(ACCOUNT_ID) 
	REFERENCES ACCOUNT(ACCOUNT_ID),

	CONSTRAINT PK_FAVORITE_PRODUCT
	FOREIGN KEY(PRODUCT_ID) 
	REFERENCES PRODUCT(PRODUCT_ID),
)
-- Suggestion list
CREATE TABLE FEATURE(
	FEATURE_ID VARCHAR(100) PRIMARY KEY,
	PRODUCT_ID VARCHAR(100)

	CONSTRAINT PK_FEATURE_PRODUCT
	FOREIGN KEY(PRODUCT_ID) 
	REFERENCES PRODUCT(PRODUCT_ID),
)
